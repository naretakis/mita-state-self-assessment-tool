name: Deploy to GitHub Pages

on:
  push:
    branches: [main, dev, test]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single build job that handles all branches
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get branch name
        id: branch-name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Download existing site
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        continue-on-error: true
        with:
          name: github-pages
          path: existing-site
          workflow: deploy.yml
          workflow_conclusion: success
          
      - name: Extract existing site
        run: |
          mkdir -p site
          if [ -f existing-site/artifact.tar ]; then
            tar -xf existing-site/artifact.tar -C site
          fi
          # Ensure .nojekyll exists at root level
          touch site/.nojekyll
          ls -la site

      - name: Build for main branch
        if: steps.branch-name.outputs.BRANCH_NAME == 'main'
        env:
          NEXT_PUBLIC_BASE_PATH: /mita-state-self-assessment-tool
        run: |
          npm run build
          # Copy to site root, preserving other directories
          cp -r out/* site/

      - name: Build for dev branch
        if: steps.branch-name.outputs.BRANCH_NAME == 'dev'
        env:
          NEXT_PUBLIC_BASE_PATH: /mita-state-self-assessment-tool/dev
        run: |
          npm run build
          # Create dev directory if it doesn't exist
          mkdir -p site/dev
          # Copy to dev directory, removing the nested base path
          if [ -d "out/mita-state-self-assessment-tool/dev" ]; then
            cp -r out/mita-state-self-assessment-tool/dev/* site/dev/
          else
            cp -r out/* site/dev/
          fi

      - name: Build for test branch
        if: steps.branch-name.outputs.BRANCH_NAME == 'test'
        env:
          NEXT_PUBLIC_BASE_PATH: /mita-state-self-assessment-tool/test
        run: |
          npm run build
          # Create test directory if it doesn't exist
          mkdir -p site/test
          # Copy to test directory, removing the nested base path
          if [ -d "out/mita-state-self-assessment-tool/test" ]; then
            cp -r out/mita-state-self-assessment-tool/test/* site/test/
          else
            cp -r out/* site/test/
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4