name: Deploy to GitHub Pages

on:
  push:
    branches: [main, dev, test]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get branch name
        id: branch-name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Download existing site
        id: download-artifact
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: github-pages
          path: existing-site
          
      - name: Extract and setup site structure
        run: |
          mkdir -p site
          
          # Extract existing site if available
          if [ -f existing-site/artifact.tar ]; then
            echo "Extracting existing site..."
            cd site
            tar -xf ../existing-site/artifact.tar
            cd ..
          else
            echo "No existing site found, creating fresh structure"
          fi
          
          # Ensure directories exist
          mkdir -p site/dev site/test
          touch site/.nojekyll
          
          echo "=== EXISTING SITE STRUCTURE ==="
          find site -type f | head -20

      - name: Build current branch
        run: |
          BRANCH="${{ steps.branch-name.outputs.BRANCH_NAME }}"
          echo "Building for branch: $BRANCH"
          
          if [ "$BRANCH" == "main" ]; then
            export NEXT_PUBLIC_BASE_PATH="/mita-state-self-assessment-tool"
            echo "Building main with base path: $NEXT_PUBLIC_BASE_PATH"
            npm run build
            echo "=== MAIN BUILD OUTPUT ==="
            ls -la out/
            # Copy to root, preserving subdirectories
            find out -maxdepth 1 -type f -exec cp {} site/ \;
            if [ -d "out/_next" ]; then cp -r out/_next site/; fi
            if [ -d "out/content" ]; then cp -r out/content site/; fi
            
          elif [ "$BRANCH" == "dev" ]; then
            export NEXT_PUBLIC_BASE_PATH="/mita-state-self-assessment-tool/dev"
            echo "Building dev with base path: $NEXT_PUBLIC_BASE_PATH"
            npm run build
            echo "=== DEV BUILD OUTPUT ==="
            ls -la out/
            # Clear and rebuild dev directory
            rm -rf site/dev
            mkdir -p site/dev
            cp -r out/* site/dev/
            
          elif [ "$BRANCH" == "test" ]; then
            export NEXT_PUBLIC_BASE_PATH="/mita-state-self-assessment-tool/test"
            echo "Building test with base path: $NEXT_PUBLIC_BASE_PATH"
            npm run build
            echo "=== TEST BUILD OUTPUT ==="
            ls -la out/
            # Clear and rebuild test directory
            rm -rf site/test
            mkdir -p site/test
            cp -r out/* site/test/
          fi

      - name: Debug final structure
        run: |
          echo "=== FINAL SITE STRUCTURE ==="
          find site -name "*.html" | sort
          echo "=== DIRECTORY SIZES ==="
          du -sh site/* 2>/dev/null || echo "No subdirectories"
          echo "=== ASSET PATHS ==="
          find site -name "_next" -type d
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4