name: Deploy to GitHub Pages

on:
  push:
    branches: [main, dev, test]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment per branch
concurrency:
  group: "pages-${{ github.ref_name }}"
  cancel-in-progress: false

jobs:
  # Single build job that handles all branches
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get branch name
        id: branch-name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Download existing site
        continue-on-error: true
        run: |
          curl -s https://naretakis.github.io/mita-state-self-assessment-tool/sitemap.txt > /dev/null 2>&1 || echo "No existing site"
          
      - name: Setup site structure
        run: |
          mkdir -p site/dev site/test
          touch site/.nojekyll
          
          # Download existing main site if it exists
          if [ "${{ steps.branch-name.outputs.BRANCH_NAME }}" != "main" ]; then
            curl -s -f https://naretakis.github.io/mita-state-self-assessment-tool/index.html -o site/index.html || echo "No main site yet"
            curl -s -f -r 0-1000000 https://naretakis.github.io/mita-state-self-assessment-tool/_next/ -o /dev/null && 
            wget -r -np -nH -nd -P site/_next/ https://naretakis.github.io/mita-state-self-assessment-tool/_next/ 2>/dev/null || echo "No main assets"
          fi
          
          # Download existing dev site if it exists and we're not building dev
          if [ "${{ steps.branch-name.outputs.BRANCH_NAME }}" != "dev" ]; then
            curl -s -f https://naretakis.github.io/mita-state-self-assessment-tool/dev/index.html -o site/dev/index.html || echo "No dev site yet"
          fi
          
          # Download existing test site if it exists and we're not building test
          if [ "${{ steps.branch-name.outputs.BRANCH_NAME }}" != "test" ]; then
            curl -s -f https://naretakis.github.io/mita-state-self-assessment-tool/test/index.html -o site/test/index.html || echo "No test site yet"
          fi

      - name: Build and deploy
        run: |
          if [ "${{ steps.branch-name.outputs.BRANCH_NAME }}" == "main" ]; then
            export NEXT_PUBLIC_BASE_PATH=/mita-state-self-assessment-tool
            npm run build
            cp -r out/* site/
          elif [ "${{ steps.branch-name.outputs.BRANCH_NAME }}" == "dev" ]; then
            export NEXT_PUBLIC_BASE_PATH=/mita-state-self-assessment-tool/dev
            npm run build
            rm -rf site/dev/*
            cp -r out/* site/dev/
          elif [ "${{ steps.branch-name.outputs.BRANCH_NAME }}" == "test" ]; then
            export NEXT_PUBLIC_BASE_PATH=/mita-state-self-assessment-tool/test
            npm run build
            rm -rf site/test/*
            cp -r out/* site/test/
          fi

      - name: List final site structure
        run: |
          echo "Final site structure:"
          find site -name "*.html" | head -10
          echo "Directory sizes:"
          du -sh site/* 2>/dev/null || echo "No subdirectories"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4