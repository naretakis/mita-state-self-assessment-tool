name: Deploy to GitHub Pages

on:
  push:
    branches: [main, dev, test]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment per branch
concurrency:
  group: "pages-${{ github.ref_name }}"
  cancel-in-progress: false

jobs:
  # Single build job that handles all branches
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get branch name
        id: branch-name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Download existing site
        id: download-artifact
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: github-pages
          path: existing-site
          
      - name: Extract existing site
        run: |
          mkdir -p site
          if [ -f existing-site/artifact.tar ]; then
            cd site
            tar -xf ../existing-site/artifact.tar
            cd ..
          fi
          # Ensure .nojekyll exists at root level
          touch site/.nojekyll
          # Create branch directories if they don't exist
          mkdir -p site/dev site/test
          echo "Current site structure:"
          find site -type f | head -20

      - name: Build for main branch
        if: steps.branch-name.outputs.BRANCH_NAME == 'main'
        env:
          NEXT_PUBLIC_BASE_PATH: /mita-state-self-assessment-tool
        run: |
          npm run build
          # Copy to site root, preserving other directories
          rsync -av --exclude='dev' --exclude='test' out/ site/

      - name: Build for dev branch
        if: steps.branch-name.outputs.BRANCH_NAME == 'dev'
        env:
          NEXT_PUBLIC_BASE_PATH: /mita-state-self-assessment-tool/dev
        run: |
          npm run build
          # Remove existing dev directory and recreate
          rm -rf site/dev
          mkdir -p site/dev
          # Copy build output to dev directory
          cp -r out/* site/dev/

      - name: Build for test branch
        if: steps.branch-name.outputs.BRANCH_NAME == 'test'
        env:
          NEXT_PUBLIC_BASE_PATH: /mita-state-self-assessment-tool/test
        run: |
          npm run build
          # Remove existing test directory and recreate
          rm -rf site/test
          mkdir -p site/test
          # Copy build output to test directory
          cp -r out/* site/test/

      - name: List final site structure
        run: |
          echo "Final site structure:"
          find site -name "*.html" | head -10
          echo "Directory sizes:"
          du -sh site/* 2>/dev/null || echo "No subdirectories"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4